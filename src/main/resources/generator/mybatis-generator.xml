<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--<classPathEntry location="./target/classes"/>-->

    <!--MyBatis3DynamicSql-->
    <context id="default" targetRuntime="MyBatis3DynamicSql">
        <property name="autoDelimitKeywords" value="true"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="org.mybatis.generator.plugins.FluentBuilderMethodsPlugin"/>

        <!-- optional，旨在创建class时，对注释进行控制 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="false"/>
            <property name="addRemarkComments" value="true"/>
        </commentGenerator>

        <!--jdbc的数据库连接 -->
        <jdbcConnection
                driverClass="com.mysql.jdbc.Driver"
                connectionURL="jdbc:mysql://127.0.0.1:3306/tobacco"
                userId="root"
                password="root">
        </jdbcConnection>

        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="com.lm.tobacco.generated.entity" targetProject="src/generated/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="false"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="false"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
            <!-- DO 的父类 -->
            <!--<property name="rootClass" value="com.jd.hrte.onej.framework.entity.BaseEntity"/>-->
        </javaModelGenerator>

        <!-- Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="mappers" targetProject="src/generated/resources">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <javaClientGenerator targetPackage="com.lm.tobacco.generated.mapper"
                             targetProject="src/generated/java"
                             type="ANNOTATEDMAPPER">
        </javaClientGenerator>

        <!-- 数据库表 -->
        <table tableName="employee" modelType="conditional">
            <generatedKey sqlStatement="JDBC" column="id" identity="true"/>
        </table>
        <table tableName="sign" modelType="conditional">
            <generatedKey sqlStatement="JDBC" column="id" identity="true"/>
        </table>
        <!--<table tableName="jd_od_dept" modelType="conditional">-->
            <!--<generatedKey sqlStatement="JDBC" column="id" identity="true"/>-->
            <!--<columnOverride column="is_formal_org" jdbcType="VARCHAR"-->
                            <!--javaType="com.jd.hrte.onej.framework.entity.YnEnum"-->
                            <!--typeHandler="com.jd.hrte.onej.framework.entity.YnTypeHandler">-->
            <!--</columnOverride>-->
            <!--<columnOverride column="is_tech_dept" jdbcType="VARCHAR"-->
                            <!--javaType="com.jd.hrte.onej.framework.entity.YnEnum"-->
                            <!--typeHandler="com.jd.hrte.onej.framework.entity.YnTypeHandler">-->
            <!--</columnOverride>-->
        <!--</table>-->
    </context>
</generatorConfiguration>